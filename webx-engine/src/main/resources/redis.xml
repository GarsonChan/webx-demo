<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
	">
<!--redis 未使用spring-data-redis时的配置-->

    <context:property-placeholder location="classpath:property/redis.properties" />
    <context:component-scan base-package="webx.engine.util.redis" />

    <!--redis连接池配置-->
    <bean id="jedisPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
        <property name="testOnReturn" value="${redis.pool.testOnReturn}" />
    </bean>
    <!--redis的连接池,其中timeout和password不是必选项-->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" value="${redis.host}" />
        <constructor-arg index="2" value="${redis.port}" type="int"/>
        <constructor-arg index="3" value="${redis.timeout}" type="int"/>
        <constructor-arg index="4" value="${redis.password}" />
    </bean>

    <!--redis集群的连接池，要使用之前要先配好其他端口或其他服务器的redis.properties文件，再将他们引入-->
    <!--另：记得在服务器或本地先配好redis及redis.conf文件并将他们开启-->
    <!--ShardedJedisPool的使用方法和jedisPool用法类似，通过getResource获取到shardedJedis，再使用api进行缓存-->
    <!--
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" destroy-method="destroy">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg>
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="${redis.host}" />
                    <constructor-arg index="1" value="${redis.port}" />
                    <constructor-arg index="2" value="${redis.timeout}" />
                </bean>

                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="${redis2.host}" />
                    <constructor-arg index="1" value="${redis2.port}" />
                    <constructor-arg index="2" value="${redis2.timeout}" />
                </bean>

                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="${redis3.host}" />
                    <constructor-arg index="1" value="${redis3.port}" />
                    <constructor-arg index="2" value="${redis3.timeout}" />
                </bean>
            </list>
        </constructor-arg>
    </bean>-->

</beans>